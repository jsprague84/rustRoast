# Multi-stage build for Rust server
FROM rust:1.75 AS builder

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy Cargo files
COPY Cargo.toml Cargo.lock ./

# Copy source code
COPY src ./src
COPY rustroast-server ./rustroast-server

# Build the application
RUN cargo build --release --bin rustroast-server

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r rustroast && useradd -r -g rustroast rustroast

# Set working directory
WORKDIR /app

# Copy built binary from builder stage
COPY --from=builder /app/target/release/rustroast-server /usr/local/bin/rustroast-server

# Create data directory
RUN mkdir -p /app/data && chown -R rustroast:rustroast /app

# Switch to app user
USER rustroast

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:${HTTP_PORT:-3000}/health || exit 1

# Expose ports
EXPOSE 3000 3001

# Environment variables with defaults
ENV MQTT_BROKER_HOST=mosquitto
ENV MQTT_BROKER_PORT=1883
ENV RUSTROAST_DB_PATH=/app/data/rustroast.db
ENV RUST_LOG=info
ENV HTTP_PORT=3000
ENV WS_PORT=3001

# Start the application
CMD ["rustroast-server"]